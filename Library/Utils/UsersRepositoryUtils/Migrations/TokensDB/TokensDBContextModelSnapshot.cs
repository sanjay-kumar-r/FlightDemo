// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using UsersRepositoryUtils.DBContext;

namespace UsersRepositoryUtils.Migrations.TokensDB
{
    [DbContext(typeof(TokensDBContext))]
    partial class TokensDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.16")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            //modelBuilder.Entity("UsersDTOs.AccountStatus", b =>
            //    {
            //        b.Property<int>("Id")
            //            .ValueGeneratedOnAdd()
            //            .HasColumnType("int")
            //            .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            //        b.Property<string>("Description")
            //            .HasMaxLength(1024)
            //            .HasColumnType("nvarchar(1024)");

            //        b.Property<string>("Status")
            //            .IsRequired()
            //            .HasMaxLength(512)
            //            .HasColumnType("nvarchar(512)");

            //        b.HasKey("Id");

            //        b.ToTable("AccountStatus");
            //    });

            modelBuilder.Entity("UsersDTOs.UserRefreshTokens", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ExpirationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("IpAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsInvalidated")
                        .HasColumnType("bit");

                    b.Property<string>("RefreshToken")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id")
                        .HasName("PrimaryKey_UserRefreshTokensId");

                    b.HasIndex("UserId");

                    b.ToTable("UserRefreshTokens");
                });

            //modelBuilder.Entity("UsersDTOs.Users", b =>
            //    {
            //        b.Property<long>("Id")
            //            .ValueGeneratedOnAdd()
            //            .HasColumnType("bigint")
            //            .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            //        b.Property<int>("AccountStatusId")
            //            .HasColumnType("int");

            //        b.Property<DateTime?>("CreatedOn")
            //            .HasColumnType("datetime2");

            //        b.Property<string>("EmailId")
            //            .HasMaxLength(1024)
            //            .HasColumnType("nvarchar(1024)");

            //        b.Property<string>("FirstName")
            //            .HasMaxLength(512)
            //            .HasColumnType("nvarchar(512)");

            //        b.Property<bool>("IsDeleted")
            //            .HasColumnType("bit");

            //        b.Property<bool>("IsSuperAdmin")
            //            .HasColumnType("bit");

            //        b.Property<string>("LastName")
            //            .HasMaxLength(512)
            //            .HasColumnType("nvarchar(512)");

            //        b.Property<DateTime?>("ModifiedOn")
            //            .HasColumnType("datetime2");

            //        b.Property<string>("Password")
            //            .HasMaxLength(1024)
            //            .HasColumnType("nvarchar(1024)");

            //        b.HasKey("Id");

            //        b.HasIndex("AccountStatusId");

            //        b.ToTable("Users");
            //    });

            modelBuilder.Entity("UsersDTOs.UserRefreshTokens", b =>
                {
                    b.HasOne("UsersDTOs.Users", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            //modelBuilder.Entity("UsersDTOs.Users", b =>
            //    {
            //        b.HasOne("UsersDTOs.AccountStatus", "AccountStatus")
            //            .WithMany()
            //            .HasForeignKey("AccountStatusId")
            //            .OnDelete(DeleteBehavior.Cascade)
            //            .IsRequired();

            //        b.Navigation("AccountStatus");
            //    });
#pragma warning restore 612, 618
        }
    }
}
